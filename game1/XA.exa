NOTE CHARACTER SPRITE

DATA 0 0 0 0 0 0 0 0 0 0
DATA 0 0 0 1 1 1 1 0 0 0
DATA 0 0 1 1 1 1 1 1 0 0
DATA 0 1 1 1 1 1 1 1 1 0
DATA 0 1 1 1 1 1 1 1 1 0
DATA 0 1 1 1 1 1 1 1 1 0
DATA 0 1 1 1 1 1 1 1 1 0
DATA 0 0 1 1 1 1 1 1 0 0
DATA 0 0 0 1 1 1 1 0 0 0
DATA 0 0 0 0 0 0 0 0 0 0

NOTE SET COLLISION VAL
NOTE TO DIFFERENTIATE
NOTE FROM OTHER SPRITES
COPY 100 CO

LINK 800

NOTE PREPROCESS THE FILE
NOTE SO RENDERING CAN
NOTE USE ONLY ONE REGSTR
MARK PREPROCESS_SPRITE
TEST EOF
TJMP RENDER_SPRITE
NOTE MULTIPLY BY 100
NOTE TO REPRESENT IF THE
NOTE PIXEL IS ON OR OFF
COPY F X
SEEK -1
MULI X 100 X
COPY X F
JUMP PREPROCESS_SPRITE

NOTE COPY FROM THE FILE
NOTE TO THE BITMAP
MARK RENDER_SPRITE
NOTE RESET THE FILE
SEEK -9999
NOTE SET INITIAL INDEX
COPY 0 X

MARK RS_LOOP
NOTE ADD THE INDEX AND
NOTE WRITE TO THE BITMAP
ADDI F X GP
NOTE INCRMENT THE PIXEL
ADDI X 1 X
TEST X < 100
TJMP RS_LOOP

NOTE NEXT FRAME
MARK ACTION_LOOP
WAIT

NOTE MOVE LEFT OR RIGHT
ADDI GX #PADX GX
NOTE MOVE UP OR DOWN
ADDI GY #PADY GY

NOTE CLAMP TO SCREEN (X)
MARK LIMIT_X
TEST GX < -5
FJMP LIMIT_X_MAX
COPY -5 GX
JUMP LIMIT_Y

MARK LIMIT_X_MAX
TEST GX > 115
FJMP LIMIT_Y
COPY 115 GX

NOTE CLAMP TO SCREEN (Y)
MARK LIMIT_Y
TEST GY < -5
FJMP LIMIT_Y_MAX
COPY -5 GY
JUMP LOOP_COND

MARK LIMIT_Y_MAX
TEST GY > 105
FJMP LOOP_COND
COPY 105 GY

NOTE RESTART THE LOOP
MARK LOOP_COND
JUMP ACTION_LOOP