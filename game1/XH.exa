NOTE LITTLE GUY

DATA 0 0 0 0 0 0 0 0 0 0
DATA 0 0 0 0 0 0 1 1 1 0
DATA 0 0 0 0 0 1 1 0 0 0
DATA 0 1 1 1 0 1 0 1 0 0
DATA 0 1 1 1 1 1 1 0 0 0
DATA 0 1 1 1 0 1 0 1 0 0
DATA 0 0 0 0 0 1 1 0 0 0
DATA 0 0 0 0 0 0 1 1 1 0
DATA 0 0 0 0 0 0 0 0 0 0
DATA 0 0 0 0 0 0 0 0 0 0

NOTE SET COLLISION VAL
NOTE TO DIFFERENTIATE
NOTE FROM OTHER SPRITES
COPY 50 CO

MODE

LINK 800

NOTE PREPROCESS THE FILE
NOTE SO RENDERING CAN
NOTE USE ONLY ONE REGSTR
MARK PREPROCESS_SPRITE
TEST EOF
TJMP RENDER_SPRITE
NOTE MULTIPLY BY 100
NOTE TO REPRESENT IF THE
NOTE PIXEL IS ON OR OFF
COPY F X
SEEK -1
MULI X 100 X
COPY X F
JUMP PREPROCESS_SPRITE

NOTE COPY FROM THE FILE
NOTE TO THE BITMAP
MARK RENDER_SPRITE
NOTE RESET THE FILE
SEEK -9999
NOTE SET INITIAL INDEX
COPY 0 X

MARK RS_LOOP
NOTE ADD THE INDEX AND
NOTE WRITE TO THE BITMAP
ADDI F X GP
NOTE INCRMENT THE PIXEL
ADDI X 1 X
TEST X < 100
TJMP RS_LOOP

NOTE WIPE THE FILE
WIPE

REPL NEW_BOT
REPL NEW_BOT

MARK NEW_BOT
MAKE

NOTE RANDOM POSITION
RAND 20 90 GX
RAND 25 75 GY
NOTE RANDOM DIRECTION
RAND 0 1 X
MULI X 2 X
SUBI X 1 X

MULI X 2 X

NOTE RANDOM AXIS
RAND 0 1 F
SEEK -1


MARK WAIT_FOR_START
WAIT
TEST #PADB = 1000
FJMP WAIT_FOR_START

NOTE NEXT FRAME
MARK ACTION_LOOP
WAIT


TEST CI = 100
FJMP NEXT_POS
COPY 50 M


MARK NEXT_POS
TEST F = 1
SEEK -1
NOTE F=0 IS X AXIS
TJMP INCREMENT_Y
ADDI X GX GX
TEST GX > 110
TJMP SWAP_DIRECTION
TEST GX < 1
TJMP SWAP_DIRECTION
JUMP ACTION_LOOP_COND

NOTE F=1 IS Y AXIS
MARK INCREMENT_Y
ADDI X GY GY
TEST GY > 90
TJMP SWAP_DIRECTION
TEST GY < 1
TJMP SWAP_DIRECTION


MARK ACTION_LOOP_COND
JUMP ACTION_LOOP

MARK SWAP_DIRECTION
MULI X -1 X
JUMP ACTION_LOOP_COND